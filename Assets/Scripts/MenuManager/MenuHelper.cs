using System;
using System.Collections.Generic;

public class MenuHelper
{
    private static readonly Dictionary<MenuCanvas, AutoGeneratedButtonModel[]> _containerAndButtons =
        new Dictionary<MenuCanvas, AutoGeneratedButtonModel[]>();
    public static void SetGeneratedButtons(AutoGeneratedButtonModel[] buttonModels)
    {
        
    }
    public static void AddGeneratedButton(AutoGeneratedButtonModel[] buttonModels)
    {
        if (buttonModels.Length > 0)
        {
            
        }
    }

    public static Dictionary<MenuCanvas, List<AutoGeneratedButtonModel>> GetContainerAndButtons(Dictionary<TutorialType, ModuleModel> activeModules)
    {
        //set auto generated buttons data
        var containerAndButtons = new Dictionary<MenuCanvas, List<AutoGeneratedButtonModel>>();
        foreach (var activeModule in activeModules)
        {
            var buttonModels = activeModule.Value.autoGeneratedButtonModels;
            if(buttonModels==null)continue;
            foreach (var autoGeneratedButtonModel in buttonModels)
            {
                if(String.IsNullOrWhiteSpace(autoGeneratedButtonModel.buttonLabel))continue;
                var containerPrefab = autoGeneratedButtonModel.targetMenuCanvas;
                if (containerAndButtons.TryGetValue(containerPrefab, out var generatedButtons))
                {
                    generatedButtons.Add(autoGeneratedButtonModel);
                }
                else
                {
                    containerAndButtons.TryAdd(containerPrefab,
                        new List<AutoGeneratedButtonModel>() { autoGeneratedButtonModel });
                }
            }
        }
        return containerAndButtons;
    }
}
